import pygame
from pygame.sprite import Sprite

class Alien(Sprite):
    """A class to represent a single alien in the fleet."""
    
    def __init__(self, ai_game):
        """Initialize the alien and set its starting position."""
        super().__init__()
        self.screen = ai_game.screen
        self.settings = ai_game.settings 
        
        # Load the alien image and set its rect attribute.
        self.image = pygame.image.load('images/aliens.jpg')  # Add your alien image here
        
        # Scale the alien image to a smaller size (e.g., 5% of screen width)
        alien_width = int(self.screen.get_rect().width * 0.027)  # 2.7% of screen width
        alien_height = int(self.image.get_rect().height * (alien_width / self.image.get_rect().width))  # Maintain aspect ratio
        self.image = pygame.transform.scale(self.image, (alien_width, alien_height))
        
        # Get the new rect for the scaled image
        self.rect = self.image.get_rect()
        
        # Start each new alien near the top left of the screen.
        self.rect.x = self.rect.width
        self.rect.y = self.rect.height
        
        # Store the alien's exact horizontal position.
        self.x = float(self.rect.x)

    def check_edges(self):
        """Return True if alien is at edge of screen."""
        screen_rect = self.screen.get_rect()
        if self.rect.right >= screen_rect.right or self.rect.left <= 0:
            return True
        return False  # Explicitly return False if not at the edge

    def update(self):
        """Move the alien to the right or left based on fleet direction."""
        self.x += (self.settings.alien_speed *
                   self.settings.fleet_direction)
        self.rect.x = self.x

       #Draw a debug rectangle around the alien (for debugging purposes)
        pygame.draw.rect(self.screen, (255, 0, 0), self.rect, 2)  # Red rectangle
