import pygame
from pygame.sprite import Sprite

class Ship(Sprite):
    """A class to manage the player's ship."""

    def __init__(self, ai_game):
        """Initialize the ship and set its starting position."""
        super().__init__()
        self.screen = ai_game.screen
        self.settings = ai_game.settings
        self.screen_rect = ai_game.screen.get_rect()

        # Load the ship image and get its rect.u
        self.image = pygame.image.load('images/alien.bmp')
        
        # Scale the ship image to a smaller size (e.g., 10% of screen width)
        ship_width = int(self.screen_rect.width * 0.065)  # 10% of screen width
        ship_height = int(self.image.get_rect().height * (ship_width / self.image.get_rect().width))  # Maintain aspect ratio
        self.image = pygame.transform.scale(self.image, (ship_width, ship_height))
        
        # Get the new rect for the scaled image
        self.rect = self.image.get_rect()

        # Start each new ship at the bottom center of the screen
        self.rect.midbottom = self.screen_rect.midbottom
        
        # Movement flags
        self.moving_right = False
        self.moving_left = False
    
    def update(self):
        """Update the ship's position based on the movement flag."""
        # Update the ship's x value, not the rect (self.x is not needed anymore)
        if self.moving_right and self.rect.right < self.screen_rect.right:
            self.rect.x += self.settings.ship_speed
        
        if self.moving_left and self.rect.left > 0:
            self.rect.x -= self.settings.ship_speed

    def blitme(self):
        """Draw the ship at its current location."""
        self.screen.blit(self.image, self.rect)
        
    def center_ship(self):
        """ Center the ship on the screen"""
        self.rect.midbottom = self.screen_rect.midbottom
        self.x = float(self.rect.x)
